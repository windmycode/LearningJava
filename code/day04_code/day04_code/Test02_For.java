/*
流程控制语句结构：
1、顺序结构
2、分支结构
3、循环结构：重复执行某些代码时

三、循环结构
1、for循环
2、while循环
3、do...while循环
4、foreach增强循环（后面再讲）

（一）for循环
1、语法结构
形式一：
for(;;){
	需要重复执行的语句（换句话说，不需要重复执行的语句，就不要放到{}中
}
形式二：
for(循环变量初始化表达式①;  循环条件表达式②; 循环变量迭代表达式③){
	循环体语句④：需要重复执行的语句
}

注意：
（1）for(;;)其中的两个;不能多也不能少
（2）循环条件表达式②要么不写，要么必须是boolean类型

执行的过程：
（1）执行循环变量初始化表达式①;
（2）进行循环条件表达式②判断
（3）如果循环条件表达式②成立，执行循环体语句④，然后再执行循环变量迭代表达式③，完事后回到（2）
    如果循环条件表达式②不成立，结束整个for


*/
class Test02_For{
	public static void main(String[] args){
		//for(;;){//死循环，无限循环
		//	System.out.println("柴老师真漂亮！");
		//}
		
		/*
		需求：打印5遍的：柴老师真漂亮！
		i就是循环变量，既然是变量，就要声明，而且需要初始化
		*/
		for(int i=1; i<=5; i++){
			System.out.println("柴老师真漂亮！");
		}
		/*
		（1）int i=1;
		（2）i<=5;
		（3）条件成立，执行System.out.println("柴老师真漂亮！");
		（4）然后i++， i=2
		（5）i<=5;
		（6）条件成立，执行System.out.println("柴老师真漂亮！");
		（7）然后i++， i=3
		（8）i<=5;
		（9）条件成立，执行System.out.println("柴老师真漂亮！");
		（10）然后i++， i=4
		（11）i<=5;
		（12）条件成立，执行System.out.println("柴老师真漂亮！");
		（13）然后i++， i=5
		（14）i<=5;
		（15）条件成立，执行System.out.println("柴老师真漂亮！");
		（16）然后i++， i=6
		（17）i<=5;
		（18）条件不成立，结束for
		*/
		
		/*
		执行：i=1,i=3,i=5
		*/
		for(int i=1; i<=5; i+=2){
			System.out.println("柴老师真漂亮！2");
		}
		
		/*
		执行：i=1,i=2,i=4
		*/
		for(int i=1; i<=5; i*=2){
			System.out.println("柴老师真漂亮！3");
		}
	}
}







