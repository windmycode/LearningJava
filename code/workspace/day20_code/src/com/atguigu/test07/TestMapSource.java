package com.atguigu.test07;

/*
 * Map的底层实现是什么？
 * 1、哈希表系列：
 * 		数组 + 链表
 * 		数组 + 链表/红黑树
 * 2、TreeMap：红黑树
 * 
 * HashMap的底层实现：
 * 		JDK1.7以及之前：数组 + 链表
 * 		JDK1.8以及之后：数组 + 链表/红黑树
 * 
 * 数组的优点：访问速度快，因为可以根据下标直接定位到某个元素
 * 链表的优点：不需要元素是挨着存储，不需要连续空间，在添加和删除元素时不需要移动元素，只需要修改前后元素的引用关系就可以。
 * 		HashMap：会根据key的hashCode-->公式/算法-->[index]
 * 			    因为不同的hashCode值，可能得到的[index]是相同的，那么此时就冲突了，那么只能把[index]的多个映射关系用链表连接起来
 * 二叉树的优点：查找的速度比链表快
 * 		旧版的HashMap，如果key的hashCode算出了[index]相同的话（我们称为冲突）都在一个table[index]下面，
 * 	    	如果严重的话，会导致[index]下面的链表很长，就会导致查询速度减慢。当链表长到一定程度时，就需要把链表变为二叉树，以提高我们查询速度。
 * 
 */
public class TestMapSource {

}
