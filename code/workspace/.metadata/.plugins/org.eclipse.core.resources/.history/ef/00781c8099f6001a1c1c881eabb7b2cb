package com.atguigu.test01;

/*
 * 多线程相关知识的课程安排：
 * 1、JavaSE：多线程基础
 * 2、后面：多线程高级  juc
 * 
 * 多线程相关的一些概念：（了解）
 * 程序：
 * 	  当你要完成某个/些任务，功能时，选择一种编程语言而编写的一组指令的集合。
 * 软件：
 * 	 软件 = 程序 + 程序运行所需要的一些资源文件。
 * 	 一个软件中可能会有很多个程序构成。
 * 进程：
 * 	程序的一次运行。
 * 	每个进程之间是独立。操作系统在分配资源（例如：内存）时，是以进程为单位。
 * 	两个进程之间进行切换，通信（交换数据）等操作时，成本比较高。
 * 线程：
 * 	进程中的其中一条执行路径。
 * 	同一个进程中的多个线程之间是可以共享部分内存（方法区、堆），每个线程的有些内存又是独立（虚拟机栈、本地方法栈、程序计数器）。
 *  因为线程之间可能使用共享内存，那么在数据交换成本上就比较低。而且线程之间的切换，对于CPU和操作系统来说，成本比较低。
 *  所以我们通常用多线程来代替多进程的方式，实现多任务开发。
 *  线程是CPU调度的最小单位。
 * 并行：
 * 	多个线程同时运行。
 * 	并行，要求同时进行。针对CPU多核，甚至多个CPU，同时运行多个线程任务。
 * 并发：
 * 	多个进程同时运行
 * 	高并发，多个任务处理功能，但是不要求同时进行。
 * 
 * CPU：一个CPU同一个时间只能够运行一个线程的任务。
 * 如何实现多个线程同时运行的呢？
 * 是因为CPU是非常快，这个速度远远高于内存、硬盘、人的大脑反应的速度。
 * 那么CPU会在多个线程之间，快速的切换，人是感觉不到。
 * 
 */
public class TestThread {
	public static void main(String[] args) throws InterruptedException {
		Thread.sleep(100000);
	}
}
